name: Markdownify the PBIX files from commit

on: [workflow_dispatch]

jobs:
  master-script:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get latest PowerBI Desktop version
        id: get-pbi-version
        run: |
          $response = iwr 'https://chocolatey.org/api/v2/Packages()?$filter=(tolower(Id)%20eq%20%27powerbi%27)%20and%20IsLatestVersion'
          [xml]$content = $response.Content
          $version = $content.feed.entry.properties.Version
          echo "::set-output name=pbiversion::$version"
      - uses: actions/cache@v2
        id: cache-choco 
        with:
          path: C:\Program Files\Microsoft Power BI Desktop\bin\*
          key: choco-PowerBI|${{steps.get-pbi-version.outputs.pbiversion}}
      
      - name: Install Power BI Desktop
        id: choco-pbi
        run: choco install powerbi --ignore-checksums
        if: steps.cache-choco.outputs.cache-hit != 'true'
        
      - run: |
          Install-Package Microsoft.AnalysisServices.NetCore.retail.amd64 -Source 'https://www.nuget.org/api/v2' -scope CurrentUser -Force -SkipDependencies
          Install-Package Microsoft.AnalysisServices.AdomdClient.NetCore.retail.amd64 -Source 'https://www.nuget.org/api/v2' -scope CurrentUser -Force -SkipDependencies
          Install-Package Dax.Vpax.NetCore -Source 'https://www.nuget.org/api/v2' -scope CurrentUser -Force -SkipDependencies
          Install-Package Dax.Model.Extractor.NetCore -Source 'https://www.nuget.org/api/v2' -scope CurrentUser -Force -SkipDependencies
          Install-Package Dax.Metadata -Source 'https://www.nuget.org/api/v2' -scope CurrentUser -Force -SkipDependencies
          Install-Package Dax.ViewVpaExport -Source 'https://www.nuget.org/api/v2' -scope CurrentUser -Force -SkipDependencies
          Install-Package Scriban -Source 'https://www.nuget.org/api/v2' -scope CurrentUser -Force -SkipDependencies
      - run: pwsh -command "$env:GITHUB_WORKSPACE\process-run.ps1"
      - run: |          
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"
          git add .
          git commit -m "adding Markdown file"
          git push
