{{~binOps = ["Contains","Or","And","StartsWith","EndsWith"] ; compEnum = ["is",">",">=","<","<="]~}}
{{~ func render ~}}
    {{~if $0 | object.typeof == "object"~}}
        {{~for $x in $0~}}
            {{~if binOps | array.contains $x.key ~}}
                {{~render $x.value?.Left}} {{$x.key}} {{render $x.value?.Right~}}
            {{~end~}}
            {{~if $x.key == "Not"~}}
                {{~"not ("}} {{render $x.value?.Expression~}} {{")"~}}
            {{~end~}}
            {{~if $x.key == "Aggregation"~}}
                {{~render $x.value?.Expression~}} 
            {{~end~}}
            {{~if $x.key == "In"~}}
                {{~for exp in $x.value.Expressions~}}
                    {{~render exp~}} {{" is "~}}
                {{~end~}}
                {{~for val in $x.value.Values~}}
                   {{~val[0].Literal.Value~}}
                   {{~if ! for.last~}}
                        {{~" or "~}}
                    {{~end~}} 
                {{~end~}}
                {{~for query in $x.value.Table~}}
                    {{~query.value.Source~}} 
                {{~end~}}
            {{~end~}}
            {{~if $x.key == "Comparison"~}}
                {{~render $x.value.Left}} {{"compEnum[{{$x.value.ComparisonKind}}]"|object.eval_template|object.eval}} {{render $x.value.Right~}}
            {{~end~}}
            {{~if $x.key == "Column"~}}
                {{~$x.value?.Property ~}}
            {{~end~}}
            {{~if $x.key == "Literal"~}}
                {{~$x.value?.Value ~}}
            {{~end~}}
        {{~end~}}
    {{~end~}}
{{~ end ~}}
{{~ "filt  = {{model.sections[2].filters}}" | object.eval_template | object.eval ~}}
{{~for exp in  filt ~}}
    {{~for from in exp?.filter?.From~}} 
        {{~if from?.Entity-}}
            {{~from?.Entity}}
            {{~where = exp?.filter?.Where | array.first ; cond = where?.Condition ~}}
            {{~render cond ~}}
        {{~end~}}
    {{~end~}}
{{~end~}}